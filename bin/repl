#!/usr/bin/env node
var repl = require('repl');
var pkg = require('../package');
var app = require('../app');
var env = (process.env.NODE_ENV || 'development');
var replService = null;
var sep = new Array(30).join('=');
var line = 1;

function promptFormat() { 
  return ' ' + pkg.name + ' (' + env + ') [' + line + '] ~> '; 
}

console.log(sep);
console.log(' Node version: %s', process.versions.node);
console.log(' V8: %s', process.versions.v8);
console.log(sep);
console.log();

replService =
  repl
    .start({
      prompt: promptFormat(),
      useColors: true,
      input: process.stdin,
      output: process.stdout,
    });

function onDataHandler(data) {
  if (data.toString().charCodeAt(0) === 13) {
    line += 1;
    replService.prompt = promptFormat();
  }
}
process.stdin.on('data', onDataHandler);

replService.context.app = app;
replService.context.util = app.get('util');
replService.context.debug = app.get('debug');
replService.context.mongoose = app.get('mongoose');
replService.context.config = app.get('config');
replService.context.modules = app.get('modules');
replService.context.models = app.get('models');
replService.context.middlewares = app.get('middlewares');
replService.context.controllers = app.get('controllers');
